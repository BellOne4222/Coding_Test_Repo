import sys
code = [0] # 인덱스 값을 1부터 시작하기 위해 0을 초기값으로 추가
code += list(sys.stdin.readline()) # 표준 입력으로부터 암호 문자열을 읽어 리스트로 변환 후 추가
code.pop() # 마지막에 읽힌 개행 문자('\n') 제거

if code[1] == '0': # 암호가 0으로 시작하는 경우 잘못된 암호이므로 0 출력 후 종료
    print(0)
    exit(0)

length = len(code) # 암호의 길이 계산
dp = [0] * length # 동적 프로그래밍을 위한 배열 초기화, 각 인덱스에는 해당 위치까지의 해석 가짓수 저장
dp[0] = dp[1] = 1 # 암호의 시작 부분 초기화, 첫 번째 문자는 항상 1가지 방법으로 해석 가능

for i in range(2, length): # 암호의 두 번째 문자부터 마지막 문자까지 반복
    first = int(code[i]) # 현재 문자를 숫자로 변환
    tenth = int(code[i-1])*10 + int(code[i]) # 현재 문자와 바로 앞 문자를 합쳐 10의 자리 수로 변환
    if first > 0: dp[i] += dp[i-1] # 현재 문자가 0보다 크면, 직전 문자까지의 해석 가짓수를 현재에 더함
    if tenth >= 10 and tenth <= 26: dp[i] += dp[i-2] # 현재 문자와 앞 문자를 합친 수가 10에서 26 사이면, 그 앞까지의 해석 가짓수를 현재에 더함

print(dp[length-1]%1000000) # 마지막 문자까지의 해석 가짓수를 1000000으로 나눈 나머지 출력